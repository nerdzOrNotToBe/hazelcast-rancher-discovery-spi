{
  "type": "collection",
  "resourceType": "environment",
  "links": {
    "self": "…/v1/projects/1a5/environments/"
  },
  "createTypes": {
    "composeProject": "…/v1/projects/1a5/composeprojects",
    "environment": "…/v1/projects/1a5/environments"
  },
  "actions": { },
  "data": [
    {
      "id": "1e15",
      "type": "environment",
      "links": {
        "self": "…/v1/projects/1a5/environments/1e15",
        "account": "…/v1/projects/1a5/environments/1e15/account",
        "services": "…/v1/projects/1a5/environments/1e15/services",
        "composeConfig": "…/v1/projects/1a5/environments/1e15/composeconfig"
      },
      "actions": {
        "upgrade": "…/v1/projects/1a5/environments/1e15/?action=upgrade",
        "update": "…/v1/projects/1a5/environments/1e15/?action=update",
        "remove": "…/v1/projects/1a5/environments/1e15/?action=remove",
        "addoutputs": "…/v1/projects/1a5/environments/1e15/?action=addoutputs",
        "activateservices": "…/v1/projects/1a5/environments/1e15/?action=activateservices",
        "deactivateservices": "…/v1/projects/1a5/environments/1e15/?action=deactivateservices",
        "exportconfig": "…/v1/projects/1a5/environments/1e15/?action=exportconfig"
      },
      "name": "test",
      "state": "active",
      "accountId": "1a5",
      "created": "2016-11-09T12:43:43Z",
      "createdTS": 1478695423000,
      "description": null,
      "dockerCompose": null,
      "environment": null,
      "externalId": "",
      "healthState": "healthy",
      "kind": "environment",
      "outputs": null,
      "previousEnvironment": null,
      "previousExternalId": null,
      "rancherCompose": null,
      "removed": null,
      "startOnCreate": true,
      "transitioning": "no",
      "transitioningMessage": null,
      "transitioningProgress": null,
      "uuid": "77825192-e50a-4a34-bcfa-c07df92e7a54"
    },
    {
      "id": "1e19",
      "type": "environment",
      "links": {
        "self": "…/v1/projects/1a5/environments/1e19",
        "account": "…/v1/projects/1a5/environments/1e19/account",
        "services": "…/v1/projects/1a5/environments/1e19/services",
        "composeConfig": "…/v1/projects/1a5/environments/1e19/composeconfig"
      },
      "actions": {
        "upgrade": "…/v1/projects/1a5/environments/1e19/?action=upgrade",
        "update": "…/v1/projects/1a5/environments/1e19/?action=update",
        "remove": "…/v1/projects/1a5/environments/1e19/?action=remove",
        "addoutputs": "…/v1/projects/1a5/environments/1e19/?action=addoutputs",
        "activateservices": "…/v1/projects/1a5/environments/1e19/?action=activateservices",
        "deactivateservices": "…/v1/projects/1a5/environments/1e19/?action=deactivateservices",
        "exportconfig": "…/v1/projects/1a5/environments/1e19/?action=exportconfig"
      },
      "name": "registry",
      "state": "active",
      "accountId": "1a5",
      "created": "2016-11-10T14:34:34Z",
      "createdTS": 1478788474000,
      "description": null,
      "dockerCompose": "db:\n  image: mysql:5.7.10\n  environment:\n    MYSQL_DATABASE: portus\n    MYSQL_ROOT_PASSWORD: ${ROOTPASSWORD}\n    MYSQL_USER: portus\n    MYSQL_PASSWORD: ${DBPASSWORD}\n  tty: true\n  stdin_open: true\n  volumes:\n  - ${DIR}/db:/var/lib/mysql\n  labels:\n    registry.portus.db: 1\nsslproxy:\n  image: nginx:1.9.9\n  tty: true\n  stdin_open: true\n  links:\n  - portus:portus\n  volumes:\n  - ${DIR}/certs:/etc/nginx/certs:ro\n  - ${DIR}/proxy:/etc/nginx/conf.d:ro\n  labels:\n    io.rancher.scheduler.affinity:container_label_soft: registry.portus.db=1\nregistry:\n  image: registry:2.3.1\n  environment:\n    REGISTRY_LOG_LEVEL: warn\n    REGISTRY_STORAGE_DELETE_ENABLED: true\n    REGISTRY_AUTH: token\n    REGISTRY_AUTH_TOKEN_REALM: https://${DOMAIN}:${PPORT}/v2/token\n    REGISTRY_AUTH_TOKEN_SERVICE: ${DOMAIN}:${RPORT}\n    REGISTRY_AUTH_TOKEN_ISSUER: ${DOMAIN}\n    REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /certs/registry.crt\n    REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry.crt\n    REGISTRY_HTTP_TLS_KEY: /certs/registry.key\n    REGISTRY_HTTP_SECRET: httpsecret\n    REGISTRY_NOTIFICATIONS_ENDPOINTS: >\n      - name: portus\n        url: http://portus:3000/v2/webhooks/events\n        timeout: 500\n        threshold: 5\n        backoff: 1\n  tty: true\n  stdin_open: true\n  links:\n  - portus:portus\n  volumes:\n  - ${DIR}/certs:/certs\n  - ${DIR}/data:/var/lib/registry\nlb:\n  image: rancher/load-balancer-service\n  tty: true\n  stdin_open: true\n  ports:\n  - ${RPORT}:5000/tcp\n  - ${PPORT}:443/tcp\n  labels:\n    io.rancher.loadbalancer.target.sslproxy: ${PPORT}=443\n    io.rancher.loadbalancer.target.registry: ${RPORT}=5000\n    io.rancher.scheduler.global: 'true'\n    io.rancher.scheduler.affinity:not_host_label: lb=0\n    io.rancher.scheduler.affinity:not_host_label: registry.enabled=false\n  links:\n  - registry:registry\n  - sslproxy:sslproxy\nportus:\n  image: sshipway/portus:2.0.5\n  environment: \n    PORTUS_MACHINE_FQDN: ${DOMAIN}\n    PORTUS_PRODUCTION_HOST: db\n    PORTUS_PRODUCTION_DATABASE: portus\n    PORTUS_PRODUCTION_USERNAME: portus\n    PORTUS_PRODUCTION_PASSWORD: ${DBPASSWORD}\n    PORTUS_GRAVATAR_ENABLED: true\n    PORTUS_KEY_PATH: /certs/registry.key\n    PORTUS_PASSWORD: ${DBPASSWORD}\n    PORTUS_SECRET_KEY_BASE: ${ROOTPASSWORD}\n    PORTUS_CHECK_SSL_USAGE_ENABLED: true\n    PORTUS_SMTP_ENABLED: false\n    PORTUS_LDAP_ENABLED: ${LDAP}\n    PORTUS_LDAP_HOSTNAME: ${LDAPHOST}\n    PORTUS_LDAP_PORT: ${LDAPPORT}\n    PORTUS_LDAP_METHOD: ${LDAPTLS}\n    PORTUS_LDAP_BASE: ${LDAPBASE}\n    PORTUS_LDAP_UID: cn\n    PORTUS_LDAP_AUTHENTICATION_ENABLED: ${LDAPBIND}\n    PORTUS_LDAP_AUTHENTICATION_BIND_DN: ${LDAPBINDDN}\n    PORTUS_LDAP_AUTHENTICATION_PASSWORD: ${LDAPBINDPASS}\n    PORTUS_LDAP_GUESS_EMAIL_ENABLED: true\n    PORTUS_LDAP_GUESS_EMAIL_ATTR: mail\n    PORTUS_PORT: ${PPORT}\n    REGISTRY_SSL_ENABLED: true\n    REGISTRY_HOSTNAME: ${DOMAIN}\n    REGISTRY_PORT: ${RPORT}\n    REGISTRY_NAME: Registry\n  tty: true\n  stdin_open: true\n  volumes:\n  - ${DIR}/certs:/certs\n  - ${DIR}/proxy:/etc/nginx/conf.d\n  links:\n  - db:db\n  labels:\n    io.rancher.container.pull_image: always\n    io.rancher.scheduler.affinity:container_label_soft: registry.portus.db=1\n    registry.portus.app: 1\n",
      "environment": {
        "RPORT": "5000",
        "PPORT": "443",
        "DBPASSWORD": "azerty34",
        "ROOTPASSWORD": "azerty34",
        "DIR": "/opt/docker/registry",
        "DOMAIN": "10.34.0.252",
        "LDAP": "false",
        "LDAPHOST": "ldap.company.com",
        "LDAPPORT": "389",
        "LDAPTLS": "starttls",
        "LDAPBASE": "ou=People,dc=company,dc=com",
        "LDAPBIND": "false",
        "LDAPBINDDN": "ou=portus,dc=company,dc=com",
        "LDAPBINDPASS": "password"
      },
      "externalId": "catalog://community:registry:2",
      "healthState": "healthy",
      "kind": "environment",
      "outputs": null,
      "previousEnvironment": null,
      "previousExternalId": null,
      "rancherCompose": ".catalog:\n  name: \"Registry\"\n  version: \"v2.3.1-3.1\"\n  description: \"Docker Registry\"\n  uuid: registry-3\n  questions: \n    - variable: \"RPORT\"\n      label: \"Registry Port\"\n      description: \"Port on which to run the registry service\"\n      default: 5000\n      required: true\n      type: \"int\"\n    - variable: \"PPORT\"\n      label: \"Admin Port\"\n      description: \"Port on which to run the SSL Portus administration service and API\"\n      default: 443\n      required: true\n      type: \"int\"\n    - variable: \"DBPASSWORD\"\n      label: \"DB Password\"\n      description: \"Password for Portus database access, must be 8 characters or longer\"\n      required: true\n      default: password\n      type: \"password\"\n    - variable: \"ROOTPASSWORD\"\n      label: \"DB Root Password\"\n      description: \"Root Password for MySQL database, must be 8 characters or longer.  This is not normally used.\"\n      required: true\n      default: password\n      type: \"password\"\n    - variable: \"DIR\"\n      label: \"Storage directory\"\n      description: \"Path of shared storage to use for registry, database, and certificates.  This should be available on all hosts\"\n      required: true\n      type: \"string\"\n    - variable: \"DOMAIN\"\n      label: \"FQDN\"\n      description: \"FQDN of server.  This should be the CN in the certificates and will be the URL to contact the Registry and Web interface\"\n      required: true\n      type: \"string\"\n    - variable: \"LDAP\"\n      label: \"LDAP Enabled\"\n      description: \"Enable LDAP authentication\"\n      required: true\n      default: false\n      type: \"boolean\"\n    - variable: \"LDAPHOST\"\n      label: \"LDAP Server\"\n      description: \"The FQDN of the LDAP server (if LDAP authentication is being used)\"\n      required: false\n      default: \"ldap.company.com\"\n      type: \"string\"\n    - variable: \"LDAPPORT\"\n      label: \"LDAP Server port\"\n      description: \"The port number on the LDAP server (if LDAP authentication is being used)\"\n      required: false\n      default: 389\n      type: \"int\"\n    - variable: \"LDAPTLS\"\n      label: \"LDAP TLS\"\n      description: \"The TLS option for the LDAP server (if LDAP authentication is being used)\"\n      required: false\n      default: \"starttls\"\n      type: \"enum\"\n      options:\n        - starttls\n        - simple_tls\n        - plain\n    - variable: \"LDAPBASE\"\n      label: \"LDAP Base DN\"\n      description: \"The Base DN for User lookups on the LDAP server (if LDAP authentication is being used)\"\n      required: false\n      default: \"ou=People,dc=company,dc=com\"\n      type: \"string\"\n    - variable: \"LDAPBIND\"\n      label: \"LDAP Bind enabled\"\n      description: \"Should an authenticated Bind be used to access LDAP (if LDAP authentication is being used)\"\n      required: false\n      default: false\n      type: \"boolean\"\n    - variable: \"LDAPBINDDN\"\n      label: \"LDAP Bind DN\"\n      description: \"The DN to use for binding to the LDAP server (if LDAP authentication is being used with Bind enabled)\"\n      required: false\n      default: \"ou=portus,dc=company,dc=com\"\n      type: \"string\"\n    - variable: \"LDAPBINDPASS\"\n      label: \"LDAP Bind Password\"\n      description: \"The password to use for binding to the LDAP server (if LDAP authentication is being used with Bind enabled)\"\n      required: false\n      default: \"password\"\n      type: \"password\"\ndb:\n  scale: 1\nsslproxy:\n  scale: 1\nlb:\n  load_balancer_config:\n    haproxy_config: {}\n  health_check:\n    port: 42\n    interval: 2000\n    unhealthy_threshold: 3\n    healthy_threshold: 2\n    response_timeout: 2000\nregistry:\n  scale: 1\nportus:\n  scale: 1\n",
      "removed": null,
      "startOnCreate": true,
      "transitioning": "no",
      "transitioningMessage": null,
      "transitioningProgress": null,
      "uuid": "7c4c2bd4-c57d-4366-bb82-8ce6a07d3caa"
    },
    {
      "id": "1e28",
      "type": "environment",
      "links": {
        "self": "…/v1/projects/1a5/environments/1e28",
        "account": "…/v1/projects/1a5/environments/1e28/account",
        "services": "…/v1/projects/1a5/environments/1e28/services",
        "composeConfig": "…/v1/projects/1a5/environments/1e28/composeconfig"
      },
      "actions": {
        "upgrade": "…/v1/projects/1a5/environments/1e28/?action=upgrade",
        "update": "…/v1/projects/1a5/environments/1e28/?action=update",
        "remove": "…/v1/projects/1a5/environments/1e28/?action=remove",
        "addoutputs": "…/v1/projects/1a5/environments/1e28/?action=addoutputs",
        "activateservices": "…/v1/projects/1a5/environments/1e28/?action=activateservices",
        "deactivateservices": "…/v1/projects/1a5/environments/1e28/?action=deactivateservices",
        "exportconfig": "…/v1/projects/1a5/environments/1e28/?action=exportconfig"
      },
      "name": "vertx1",
      "state": "active",
      "accountId": "1a5",
      "created": "2016-11-12T10:33:06Z",
      "createdTS": 1478946786000,
      "description": null,
      "dockerCompose": null,
      "environment": null,
      "externalId": "",
      "healthState": "healthy",
      "kind": "environment",
      "outputs": null,
      "previousEnvironment": null,
      "previousExternalId": null,
      "rancherCompose": null,
      "removed": null,
      "startOnCreate": true,
      "transitioning": "no",
      "transitioningMessage": null,
      "transitioningProgress": null,
      "uuid": "4ed39955-3dbb-4d37-bcb6-8c7a6a8a4086"
    }
  ],
  "sortLinks": {
    "accountId": "…/v1/projects/1a5/environments/?sort=accountId",
    "created": "…/v1/projects/1a5/environments/?sort=created",
    "description": "…/v1/projects/1a5/environments/?sort=description",
    "externalId": "…/v1/projects/1a5/environments/?sort=externalId",
    "healthState": "…/v1/projects/1a5/environments/?sort=healthState",
    "id": "…/v1/projects/1a5/environments/?sort=id",
    "kind": "…/v1/projects/1a5/environments/?sort=kind",
    "name": "…/v1/projects/1a5/environments/?sort=name",
    "removeTime": "…/v1/projects/1a5/environments/?sort=removeTime",
    "removed": "…/v1/projects/1a5/environments/?sort=removed",
    "state": "…/v1/projects/1a5/environments/?sort=state",
    "uuid": "…/v1/projects/1a5/environments/?sort=uuid"
  },
  "pagination": {
    "first": null,
    "previous": null,
    "next": null,
    "limit": 100,
    "total": null,
    "partial": false
  },
  "sort": null,
  "filters": {
    "accountId": null,
    "created": null,
    "description": null,
    "externalId": null,
    "healthState": null,
    "id": null,
    "kind": null,
    "name": null,
    "removeTime": null,
    "removed": null,
    "state": null,
    "uuid": null
  },
  "createDefaults": { }
}